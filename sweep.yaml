method: bayes
program: train.py
project: "bio-chem-lm"
metric:
  goal: minimize
  name: val_loss
parameters:
  generator_config:
    value: "model/configs/generator/tiny.yaml"

  discriminator_config:
    value: "model/configs/discriminator/tiny.yaml"

  base_config_size:
    value: "tiny.yaml"

  position_embedding_type:
    values: ["absolute", "relative_key", "relative_key_query", "rotary", "alibi"]

  output_mult:
    values: [1, 8, 64, 256, 512, 1024]

  prenorm:
    values: [false, true]

  attn_norm_layer_type:
    values: ["layer_norm", "group_norm"]

  attn_num_groups:
    values: [1, 2, 4, 8, 16]

  embedding_norm_layer_type:
    values: ["layer_norm", "group_norm"]

  embedding_num_groups:
    values: [1, 2, 4, 8, 16]

  mup:
    value: true

  readout_zero_init:
    value: true

  query_zero_init:
    values: [false, true]

  lr:
    distribution: uniform
    min: 9e-6
    max: 1e-3

  train_batch_size:
    value: 128

  validation_batch_size:
    value: 256

  num_epochs:
    value: 10

  num_steps_per_epoch:
    value: 1000

  num_eval_steps:
    value: 1000

  num_warmup_steps:
    values: [0, 100, 1000]

  num_training_steps:
    value: 10000

  scheduler:
    values: [false, true]

  global_clip_norm:
    values: [0, 0.2, 0.5, 1]

  wandb:
    value: true

  wandb_project:
    value: "bio-chem-lm"

  wandb_entity:
    value: "zanussbaum"


command:
  - accelerate
  - launch
  - ${program}
  - ${args_no_boolean_flags}